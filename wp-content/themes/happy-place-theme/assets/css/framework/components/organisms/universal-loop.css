/**
 * Universal Loop Component Styles
 *
 * Handles grid, list, masonry, and other layout variations
 * for the universal-loop system.
 *
 * @package HappyPlaceTheme
 * @since 1.0.0
 */

/* ============================================================================
   UNIVERSAL LOOP CONTAINER
   ============================================================================ */
.hph-universal-loop {
    --hph-loop-gap: var(--hph-spacing-lg);
    --hph-loop-gap-sm: var(--hph-spacing-md);
}

.hph-loop-container {
    display: grid;
    gap: var(--hph-loop-gap);
}

/* ============================================================================
   GRID LAYOUT
   ============================================================================ */
.hph-loop-container--grid {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
}

/* Grid column variations - ensure consistent sizing */
.hph-loop-container--grid.hph-grid-cols-1 {
    grid-template-columns: 1fr;
}

.hph-loop-container--grid.hph-grid-cols-2 {
    grid-template-columns: repeat(2, 1fr);
}

.hph-loop-container--grid.hph-grid-cols-3 {
    grid-template-columns: repeat(3, 1fr);
}

.hph-loop-container--grid.hph-grid-cols-4 {
    grid-template-columns: repeat(4, 1fr);
}

/* Ensure grid items are consistent in size */
.hph-loop-container--grid .hph-loop-item {
    display: flex;
    width: 100%;
}

.hph-loop-container--grid .hph-card {
    width: 100%;
    height: 100%;
    min-height: 400px; /* Consistent minimum height for all grid cards */
    display: flex;
    flex-direction: column;
}

/* Ensure card content fills the available space properly in grid */
.hph-loop-container--grid .hph-card-media {
    flex: 0 0 200px; /* Fixed height for consistency */
}

.hph-loop-container--grid .hph-card-body {
    flex: 1; /* Take remaining space */
    display: flex;
    flex-direction: column;
}

.hph-loop-container--grid .hph-card-content {
    flex: 1; /* Fill available space */
    display: flex;
    flex-direction: column;
    justify-content: space-between; /* Distribute content evenly */
}

/* Responsive overrides with higher specificity */
@media (min-width: 768px) {
    .hph-loop-container--grid.md\:hph-grid-cols-2 {
        grid-template-columns: repeat(2, 1fr) !important;
    }

    .hph-loop-container--grid.md\:hph-grid-cols-3 {
        grid-template-columns: repeat(3, 1fr) !important;
    }
}

@media (min-width: 1024px) {
    .hph-loop-container--grid.lg\:hph-grid-cols-3 {
        grid-template-columns: repeat(3, 1fr) !important;
    }

    .hph-loop-container--grid.lg\:hph-grid-cols-4 {
        grid-template-columns: repeat(4, 1fr) !important;
    }
}

@media (min-width: 1280px) {
    .hph-loop-container--grid.xl\:hph-grid-cols-5 {
        grid-template-columns: repeat(5, 1fr) !important;
    }

    .hph-loop-container--grid.xl\:hph-grid-cols-6 {
        grid-template-columns: repeat(6, 1fr) !important;
    }
}

/* ============================================================================
   LIST LAYOUT
   ============================================================================ */
.hph-loop-container--list {
    display: flex !important;
    flex-direction: column !important;
    gap: var(--hph-loop-gap-sm) !important;
    /* Override any grid styles */
    grid-template-columns: none !important;
}

.hph-loop-container--list .hph-loop-item {
    width: 100% !important;
    max-width: none !important;
    margin: var(--hph-spacing-md) 0; /* Add vertical spacing between list items */
}

/* Ensure list layout cards get proper horizontal styling */
.hph-loop-container--list .hph-card {
    width: 100%;
    max-height: 250px; /* Reasonable max height for horizontal cards */
    overflow: hidden; /* Ensure content doesn't overflow */
}

/* Ensure horizontal cards display properly in list layout */
.hph-loop-container--list .hph-card-horizontal {
    flex-direction: row !important;
    align-items: stretch !important;
}

.hph-loop-container--list .hph-card-horizontal .hph-card-media {
    flex: 0 0 40% !important;
    min-height: 200px !important;
}

.hph-loop-container--list .hph-card-horizontal .hph-card-body {
    flex: 1 !important;
    display: flex !important;
    flex-direction: column !important;
}

/* Let cards handle their own internal layout via hph-card-horizontal class */

/* ============================================================================
   MASONRY LAYOUT
   ============================================================================ */
.hph-loop-container--masonry {
    column-count: 3;
    column-gap: var(--hph-loop-gap);
    column-fill: balance;
}

.hph-loop-container--masonry .hph-loop-item {
    break-inside: avoid;
    margin-bottom: var(--hph-loop-gap);
}

/* ============================================================================
   LOOP ITEMS
   ============================================================================ */
.hph-loop-item {
    display: flex;
    width: 100%;
}

.hph-loop-item--sm {
    max-width: 280px;
}

.hph-loop-item--md {
    max-width: 350px;
}

.hph-loop-item--lg {
    max-width: 420px;
}

/* ============================================================================
   RESPONSIVE DESIGN
   ============================================================================ */
@media (max-width: 1200px) {
    .hph-loop-container--grid.hph-grid-cols-4 {
        grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
    }
}

@media (max-width: 768px) {
    .hph-universal-loop {
        --hph-loop-gap: var(--hph-spacing-md);
        --hph-loop-gap-sm: var(--hph-spacing-sm);
    }

    .hph-loop-container--grid {
        grid-template-columns: 1fr;
    }

    .hph-loop-container--grid.hph-grid-cols-2,
    .hph-loop-container--grid.hph-grid-cols-3,
    .hph-loop-container--grid.hph-grid-cols-4 {
        grid-template-columns: 1fr;
    }

    .hph-loop-container--masonry {
        column-count: 2;
    }
}

@media (max-width: 480px) {
    .hph-universal-loop {
        --hph-loop-gap: var(--hph-spacing-sm);
        --hph-loop-gap-sm: var(--hph-spacing-xs);
    }

    .hph-loop-container--masonry {
        column-count: 1;
    }
}

/* ============================================================================
   SECTION HEADER
   ============================================================================ */
.hph-section-header {
    text-align: center;
}

.hph-section-title {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--hph-spacing-sm);
}

.hph-section-subtitle {
    color: var(--hph-text-muted);
    max-width: 600px;
    margin: 0 auto;
}

/* ============================================================================
   CONTROLS
   ============================================================================ */
.hph-loop-controls {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    gap: var(--hph-spacing-md);
    margin-bottom: var(--hph-spacing-lg);
}

.hph-view-controls {
    display: flex;
    align-items: center;
    gap: var(--hph-spacing-sm);
}

.hph-view-toggle {
    display: flex;
    border: 1px solid var(--hph-border-color);
    border-radius: var(--hph-border-radius);
    overflow: hidden;
}

.hph-view-btn {
    padding: var(--hph-spacing-xs) var(--hph-spacing-sm);
    background: var(--hph-white);
    border: none;
    cursor: pointer;
    transition: var(--hph-transition);
    color: var(--hph-text-muted);
}

.hph-view-btn:hover,
.hph-view-btn-active {
    background: var(--hph-primary);
    color: var(--hph-white);
}

.hph-sort-control {
    display: flex;
    align-items: center;
    gap: var(--hph-spacing-xs);
}

/* ============================================================================
   RESULTS INFO
   ============================================================================ */
.hph-results-info {
    color: var(--hph-text-muted);
    font-size: var(--hph-font-size-sm);
    margin-bottom: var(--hph-spacing-md);
}

/* ============================================================================
   EMPTY STATE
   ============================================================================ */
.hph-empty-state {
    text-align: center;
    padding: var(--hph-spacing-3xl) var(--hph-spacing-lg);
    color: var(--hph-text-muted);
}

.hph-empty-state .hph-icon {
    font-size: 4rem;
    margin-bottom: var(--hph-spacing-lg);
    color: var(--hph-gray-300);
}

.hph-empty-state h3 {
    font-size: var(--hph-font-size-xl);
    margin-bottom: var(--hph-spacing-md);
    color: var(--hph-text-color);
}

/* ============================================================================
   PAGINATION
   ============================================================================ */
.hph-pagination-wrapper {
    margin-top: var(--hph-spacing-xl);
    padding-top: var(--hph-spacing-lg);
    border-top: 1px solid var(--hph-border-color);
    text-align: center;
}

.hph-pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: var(--hph-spacing-xs);
    list-style: none;
    padding: 0;
    margin: 0;
}

.hph-pagination li {
    display: flex;
}

.hph-pagination a,
.hph-pagination span {
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 2.5rem;
    height: 2.5rem;
    padding: 0 var(--hph-spacing-sm);
    text-decoration: none;
    border: 1px solid var(--hph-border-color);
    border-radius: var(--hph-border-radius);
    color: var(--hph-text-color);
    transition: var(--hph-transition);
}

.hph-pagination a:hover,
.hph-pagination .current {
    background: var(--hph-primary);
    color: var(--hph-white);
    border-color: var(--hph-primary);
}