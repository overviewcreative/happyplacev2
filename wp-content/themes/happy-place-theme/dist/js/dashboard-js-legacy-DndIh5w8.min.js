System.register(["./chunks/unified-dashboard-legacy-BaS6xwwb.min.js"],function(t,e){"use strict";return{setters:[null],execute:function(){class t{constructor(){this.isLoggedIn=HPUserSystem?.isLoggedIn||!1,this.userId=HPUserSystem?.userId||0,this.nonce=HPUserSystem?.nonce||"",this.ajaxUrl=HPUserSystem?.ajaxUrl||"/wp-admin/admin-ajax.php",this.pageStartTime=Date.now(),this.maxScrollDepth=0,this.currentListingId=this.getCurrentListingId(),this.init()}init(){this.initFavoriteButtons(),this.initSaveSearchButtons(),this.initQuickRegistration(),this.initEngagementTracking(),this.initDashboard(),this.initModals(),this.currentListingId&&this.trackListingView()}initFavoriteButtons(){document.addEventListener("click",t=>{t.target.closest(".favorite-btn, .btn-favorite")&&(t.preventDefault(),this.handleFavoriteToggle(t.target.closest(".favorite-btn, .btn-favorite")))})}async handleFavoriteToggle(t){const e=t.dataset.listingId;if(!e)return;if(!this.isLoggedIn)return void this.showLoginPrompt("Save your favorite properties",{benefits:["Save unlimited favorite properties","Get email alerts for new matches","Track your viewing history"]});t.classList.add("loading");const n=t.innerHTML;t.innerHTML='<i class="fas fa-spinner fa-spin"></i>',t.disabled=!0;try{const n=await this.makeRequest("hph_toggle_favorite",{listing_id:e,nonce:this.nonce});n.success?(this.updateFavoriteButton(t,n.data),this.showNotification("added"===n.data.action?"Property saved to favorites!":"Property removed from favorites","added"===n.data.action?"success":"info"),this.updateFavoritesCount(n.data.count)):this.showNotification(n.data.message||"Error updating favorite","error")}catch(a){this.showNotification("Error updating favorite","error")}finally{t.classList.remove("loading"),t.innerHTML=n,t.disabled=!1}}updateFavoriteButton(t,e){const n=t.querySelector("i"),a=t.querySelector(".btn-text");e.is_favorited?(t.classList.add("is-favorited"),n&&(n.classList.remove("far"),n.classList.add("fas")),a&&(a.textContent=t.dataset.textRemove||"Saved")):(t.classList.remove("is-favorited"),n&&(n.classList.remove("fas"),n.classList.add("far")),a&&(a.textContent=t.dataset.textAdd||"Save Property"))}updateFavoritesCount(t){document.querySelectorAll(".favorites-count").forEach(e=>{e.textContent=t,e.style.display=t>0?"inline":"none"})}initSaveSearchButtons(){document.addEventListener("click",t=>{t.target.closest(".save-search-btn, #save-current-search")&&(t.preventDefault(),this.handleSaveSearch(t.target.closest(".save-search-btn, #save-current-search")))})}async handleSaveSearch(t){if(!this.isLoggedIn)return void this.showLoginPrompt("Save your search and get email alerts",{conversion_context:"save_search"});const e=this.getCurrentSearchParams();0!==Object.keys(e).length?this.showSaveSearchModal(e):this.showNotification("Please perform a search first","warning")}getCurrentSearchParams(){const t={};return new URLSearchParams(window.location.search).forEach((e,n)=>{e&&"paged"!==n&&(t[n]=e)}),document.querySelectorAll(".active-filter").forEach(e=>{const n=e.dataset.filterKey,a=e.dataset.filterValue;n&&a&&(t[n]=a)}),t}showSaveSearchModal(t){const e=document.getElementById("save-search-modal");e?(this.populateSearchCriteria(t),new bootstrap.Modal(e).show()):this.createSaveSearchModal(t)}createSaveSearchModal(t){document.body.insertAdjacentHTML("beforeend",'\n            <div class="modal fade" id="dynamic-save-search-modal" tabindex="-1">\n                <div class="modal-dialog">\n                    <div class="modal-content">\n                        <div class="modal-header">\n                            <h5 class="modal-title">Save Your Search</h5>\n                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>\n                        </div>\n                        <div class="modal-body">\n                            <form id="dynamic-save-search-form">\n                                <div class="mb-3">\n                                    <label for="search-name-dynamic" class="form-label">Search Name</label>\n                                    <input type="text" class="form-control" id="search-name-dynamic" name="search_name" \n                                           placeholder="e.g., 3BR Houses in Downtown" required>\n                                </div>\n                                \n                                <div class="mb-3">\n                                    <label for="email-frequency-dynamic" class="form-label">Email Frequency</label>\n                                    <select class="form-select" id="email-frequency-dynamic" name="frequency">\n                                        <option value="instant">Instant</option>\n                                        <option value="daily" selected>Daily</option>\n                                        <option value="weekly">Weekly</option>\n                                        <option value="monthly">Monthly</option>\n                                    </select>\n                                </div>\n                                \n                                <div class="search-criteria-summary">\n                                    <h6>Search Criteria:</h6>\n                                    <div id="criteria-list-dynamic"></div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class="modal-footer">\n                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>\n                            <button type="submit" form="dynamic-save-search-form" class="btn btn-primary">Save Search</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        '),this.populateSearchCriteria(t,"criteria-list-dynamic"),document.getElementById("dynamic-save-search-form").addEventListener("submit",e=>{e.preventDefault(),this.submitSaveSearch(e.target,t)});const e=document.getElementById("dynamic-save-search-modal");new bootstrap.Modal(e).show(),e.addEventListener("hidden.bs.modal",()=>{e.remove()})}populateSearchCriteria(t,e="search-criteria-summary"){const n=document.getElementById(e);if(!n)return;const a={s:"Keywords",location:"Location",property_type:"Property Type",min_price:"Min Price",max_price:"Max Price",bedrooms:"Bedrooms",bathrooms:"Bathrooms",features:"Features"};let s="";Object.keys(t).forEach(e=>{const n=a[e]||e.replace("_"," "),i=t[e];s+=`<span class="badge bg-secondary me-1 mb-1">${n}: ${i}</span>`}),n.innerHTML=s||'<span class="text-muted">No specific criteria</span>'}async submitSaveSearch(t,e){const n=new FormData(t),a=n.get("search_name"),s=n.get("frequency");if(!a.trim())return void this.showNotification("Please enter a search name","warning");const i=t.querySelector('[type="submit"]');i.disabled=!0,i.innerHTML='<i class="fas fa-spinner fa-spin"></i> Saving...';try{const n=await this.makeRequest("hph_save_search",{search_name:a,criteria:e,frequency:s,nonce:this.nonce});n.success?(this.showNotification("Search saved successfully! You'll receive email alerts for new matches.","success"),bootstrap.Modal.getInstance(t.closest(".modal")).hide()):this.showNotification(n.data.message||"Error saving search","error")}catch(o){this.showNotification("Error saving search","error")}finally{i.disabled=!1,i.innerHTML="Save Search"}}initQuickRegistration(){document.addEventListener("submit",t=>{t.target.classList.contains("quick-registration-form")&&(t.preventDefault(),this.handleQuickRegistration(t.target))})}async handleQuickRegistration(t){const e=new FormData(t),n=t.querySelector('[type="submit"]'),a=e.get("email"),s=e.get("first_name");if(!a||!s)return void this.showNotification("Please fill in all required fields","warning");const i=n.querySelector(".btn-text"),o=n.querySelector(".btn-loading");i&&o&&(i.style.display="none",o.style.display="inline"),n.disabled=!0;try{const n=await this.makeRequest("quick_register",{first_name:e.get("first_name"),last_name:e.get("last_name"),email:e.get("email"),nonce:t.dataset.nonce||this.nonce});n.success?(this.showNotification(n.data.message,"success"),n.data.redirect?setTimeout(()=>{window.location.href=n.data.redirect},2e3):setTimeout(()=>{window.location.reload()},2e3)):this.showNotification(n.data.message||"Registration failed","error")}catch(r){this.showNotification("Registration error. Please try again.","error")}finally{i&&o&&(i.style.display="inline",o.style.display="none"),n.disabled=!1}}initEngagementTracking(){let t=0;window.addEventListener("scroll",()=>{const e=Math.round(window.scrollY/(document.body.scrollHeight-window.innerHeight)*100);e>t&&(t=e,this.maxScrollDepth=t)}),window.addEventListener("beforeunload",()=>{this.trackTimeOnPage()}),document.addEventListener("visibilitychange",()=>{"hidden"===document.visibilityState&&this.trackTimeOnPage()})}trackTimeOnPage(){if(!this.isLoggedIn)return;const t=Math.floor((Date.now()-this.pageStartTime)/1e3),e=Math.floor(t/60);if(e>0){const t=new URLSearchParams({action:"hph_track_engagement",user_id:this.userId,engagement_action:"time_on_site",minutes:e,scroll_depth:this.maxScrollDepth});navigator.sendBeacon(this.ajaxUrl,t)}}trackListingView(){const t=Date.now();setTimeout(()=>{const e=Math.floor((Date.now()-t)/1e3);this.makeRequest("track_listing_view_enhanced",{listing_id:this.currentListingId,view_time:e,scroll_depth:this.maxScrollDepth,source:"single_listing"}).catch(t=>{})},1e4)}getCurrentListingId(){const t=document.querySelector("[data-listing-id]");return t?t.dataset.listingId:null}initDashboard(){if(window.location.hash&&document.querySelector(".user-dashboard")){const t=window.location.hash.substring(1),e=document.querySelector(`[data-bs-target="#${t}"]`);e&&new bootstrap.Tab(e).show()}document.addEventListener("shown.bs.tab",t=>{const e=t.target.getAttribute("data-bs-target");if(e){const t=e.substring(1);history.replaceState(null,null,"#"+t)}}),this.loadDashboardData()}async loadDashboardData(){if(document.querySelector(".user-dashboard"))try{const t=document.getElementById("recent-activity");t&&(t.innerHTML='<p class="text-muted">Recent activity will be displayed here.</p>');const e=document.getElementById("recommendations");e&&(e.innerHTML='<p class="text-muted">Recommendations will appear here.</p>')}catch(t){}}initModals(){}showLoginPrompt(t,e={}){const n=`\n            <div class="modal fade" id="login-prompt-modal" tabindex="-1">\n                <div class="modal-dialog">\n                    <div class="modal-content">\n                        <div class="modal-header">\n                            <h5 class="modal-title">Sign In Required</h5>\n                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>\n                        </div>\n                        <div class="modal-body">\n                            <p class="lead">${t}</p>\n                            ${e.benefits?`\n                                <div class="benefits-list mb-3">\n                                    <h6>With your free account you can:</h6>\n                                    <ul class="list-unstyled">\n                                        ${e.benefits.map(t=>`<li><i class="fas fa-check text-success me-2"></i>${t}</li>`).join("")}\n                                    </ul>\n                                </div>\n                            `:""}\n                        </div>\n                        <div class="modal-footer">\n                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Maybe Later</button>\n                            <a href="/login?redirect_to=${encodeURIComponent(window.location.href)}" class="btn btn-primary">Sign In</a>\n                            <a href="/register?redirect_to=${encodeURIComponent(window.location.href)}" class="btn btn-success">Create Free Account</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `,a=document.getElementById("login-prompt-modal");a&&a.remove(),document.body.insertAdjacentHTML("beforeend",n);const s=document.getElementById("login-prompt-modal");new bootstrap.Modal(s).show(),s.addEventListener("hidden.bs.modal",()=>{s.remove()})}showNotification(t,e="info"){let n=document.querySelector(".toast-container");n||(n=document.createElement("div"),n.className="toast-container position-fixed top-0 end-0 p-3",document.body.appendChild(n));const a="toast-"+Date.now(),s={success:"fa-check-circle text-success",error:"fa-times-circle text-danger",warning:"fa-exclamation-triangle text-warning",info:"fa-info-circle text-info"},i=`\n            <div id="${a}" class="toast" role="alert">\n                <div class="toast-header">\n                    <i class="fas ${s[e]||s.info} me-2"></i>\n                    <strong class="me-auto">Notification</strong>\n                    <button type="button" class="btn-close" data-bs-dismiss="toast"></button>\n                </div>\n                <div class="toast-body">\n                    ${t}\n                </div>\n            </div>\n        `;n.insertAdjacentHTML("beforeend",i);const o=document.getElementById(a);new bootstrap.Toast(o,{autohide:!0,delay:"error"===e?8e3:5e3}).show(),o.addEventListener("hidden.bs.toast",()=>{o.remove()})}async makeRequest(t,e={}){const n=new URLSearchParams({action:t,...e}),a=await fetch(this.ajaxUrl,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:n});if(!a.ok)throw new Error(`HTTP error! status: ${a.status}`);return await a.json()}}document.addEventListener("DOMContentLoaded",()=>{window.userSystem=new t}),window.UserSystemManager=t,window.hphDebug}}});
