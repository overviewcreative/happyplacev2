var y=Object.defineProperty;var f=Object.getOwnPropertySymbols;var v=Object.prototype.hasOwnProperty,b=Object.prototype.propertyIsEnumerable;var g=(n,a,e)=>a in n?y(n,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[a]=e,h=(n,a)=>{for(var e in a||(a={}))v.call(a,e)&&g(n,e,a[e]);if(f)for(var e of f(a))b.call(a,e)&&g(n,e,a[e]);return n};var w=(n,a)=>()=>(a||n((a={exports:{}}).exports,a),a.exports);import"./chunks/universal-loop-BzEa3M2D.min.js";var x=w((k,d)=>{window.HPH&&HPH.register("archiveUnified",function(n){return{currentView:"grid",currentPage:1,isLoading:!1,hasMorePages:!0,currentFilters:{},elements:{},init:function(){if(document.body.classList.contains("hph-map-view")){n.debug&&console.log("HPH Archive Unified System: Initializing map-specific functionality"),this.initMapView();return}this.cacheElements(),this.bindEvents(),this.initializeView(),this.loadSavedPreferences(),n.debug&&console.log("HPH Archive Unified System Initialized")},cacheElements:function(){this.elements={viewButtons:document.querySelectorAll("[data-view]"),viewContents:document.querySelectorAll("[data-view-content]"),filterForm:document.querySelector("#hero-search-form, .hph-search-form"),sortSelect:document.querySelector("[data-sort-select], #listings-sort"),searchInput:document.querySelector("#hero-search-input"),loadMoreBtn:document.querySelector("[data-load-more]"),loadMoreSection:document.querySelector(".hph-load-more-section"),gridContainer:document.querySelector('[data-listings-container="grid"]'),listContainer:document.querySelector('[data-listings-container="list"]'),mapContainer:document.querySelector('[data-view-content="map"]'),resultsCount:document.querySelector(".hph-results-count"),resultsInfo:document.querySelector(".hph-results-info")}},bindEvents:function(){if(this.elements.viewButtons.forEach(e=>{HPH.events.on(e,"click",t=>{t.preventDefault();const s=e.dataset.view;this.switchView(s)})}),this.elements.filterForm&&HPH.events.on(this.elements.filterForm,"submit",e=>{e.preventDefault(),this.handleFilterSubmit()}),this.elements.sortSelect&&HPH.events.on(this.elements.sortSelect,"change",e=>{this.handleSortChange(e.target.value)}),this.elements.loadMoreBtn&&HPH.events.on(this.elements.loadMoreBtn,"click",e=>{e.preventDefault(),this.loadMoreListings()}),this.elements.searchInput){let e;HPH.events.on(this.elements.searchInput,"input",t=>{clearTimeout(e),e=setTimeout(()=>{this.handleSearchInput(t.target.value)},500)})}const a=document.querySelector(".hph-map-panel-close");a&&HPH.events.on(a,"click",e=>{e.preventDefault(),this.switchView("grid")})},switchView:function(a){if(this.currentView!==a){switch(this.currentView=a,this.elements.viewButtons.forEach(e=>{const t=e.dataset.view===a;e.classList.toggle("active",t),e.setAttribute("aria-pressed",t)}),this.elements.viewContents.forEach(e=>{const t=e.dataset.viewContent===a;e.classList.toggle("active",t),e.style.display=t?"block":"none"}),a){case"map":this.redirectToMapView();return;case"grid":case"list":document.body.classList.remove("hph-map-view-active"),this.showElementsForStandardViews();break}this.saveViewPreference(a),HPH.events.trigger(document,"hph:viewChanged",{view:a})}},handleFilterSubmit:function(){if(this.isLoading)return;const a=new FormData(this.elements.filterForm),e={};for(let[t,s]of a.entries())s&&s!==""&&(e[t]=s);this.currentFilters=e,this.currentPage=1,this.loadListings({reset:!0})},handleSortChange:function(a){this.isLoading||(this.currentFilters.sort=a,this.currentPage=1,this.loadListings({reset:!0}))},handleSearchInput:function(a){this.isLoading||(a.length>=3||a.length===0)&&(this.currentFilters.s=a,this.currentPage=1,this.loadListings({reset:!0}))},loadMoreListings:function(){this.isLoading||!this.hasMorePages||(this.currentPage++,this.loadListings({append:!0}))},loadListings:function(a={}){var t,s;if(this.isLoading)return;this.isLoading=!0,this.showLoadingState(a.reset);const e=h({action:"hph_load_listings_unified",nonce:((t=window.hphArchive)==null?void 0:t.nonce)||"",page:this.currentPage,view:this.currentView,post_type:"listing"},this.currentFilters);fetch(((s=window.hphArchive)==null?void 0:s.ajaxUrl)||"/wp-admin/admin-ajax.php",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams(e)}).then(o=>o.json()).then(o=>{this.handleAjaxResponse(o,a)}).catch(o=>{console.error("Archive AJAX Error:",o),this.showError("Failed to load listings. Please try again.")}).finally(()=>{this.isLoading=!1,this.hideLoadingState()})},handleAjaxResponse:function(a,e){var i;if(!a.success){this.showError(((i=a.data)==null?void 0:i.message)||"Failed to load listings");return}const{html:t,pagination:s,count:o,view:r}=a.data;e.reset?this.replaceListings(t,r):e.append&&this.appendListings(t,r),this.updatePagination(s),this.updateResultsCount(o),this.updateURL(),HPH.events.trigger(document,"hph:listingsLoaded",{view:r,count:o,page:this.currentPage})},replaceListings:function(a,e){const t=e==="list"?this.elements.listContainer:this.elements.gridContainer;t&&(t.innerHTML=a,this.initializeNewListings(t))},appendListings:function(a,e){const t=e==="list"?this.elements.listContainer:this.elements.gridContainer;t&&(t.insertAdjacentHTML("beforeend",a),this.initializeNewListings(t))},initializeNewListings:function(a){a.querySelectorAll(".favorite-btn").forEach(t=>{var s;t.dataset.initialized||(t.dataset.initialized="true",(s=window.userSystem)!=null&&s.initFavoriteButtons&&window.userSystem.initFavoriteButtons())})},updatePagination:function(a){this.hasMorePages=a.has_more,this.elements.loadMoreBtn&&(this.elements.loadMoreBtn.style.display=this.hasMorePages?"block":"none"),this.elements.loadMoreSection&&(this.elements.loadMoreSection.style.display=this.hasMorePages?"block":"none")},updateResultsCount:function(a){if(this.elements.resultsCount&&(this.elements.resultsCount.textContent=a.total||"0"),this.elements.resultsInfo){const e=(this.currentPage-1)*(a.per_page||12)+1,t=Math.min(e+(a.per_page||12)-1,a.total||0);this.elements.resultsInfo.textContent="".concat(e,"-").concat(t," of ").concat(a.total||0," properties")}},updateURL:function(){const a=new URL(window.location);Object.keys(this.currentFilters).forEach(e=>{this.currentFilters[e]?a.searchParams.set(e,this.currentFilters[e]):a.searchParams.delete(e)}),a.searchParams.set("view",this.currentView),window.history.replaceState({},"",a.toString())},showLoadingState:function(a=!1){if(this.elements.loadMoreBtn){const e=this.elements.loadMoreBtn.querySelector(".hph-load-more-loading"),t=this.elements.loadMoreBtn.querySelector(".hph-load-more-text");e&&t&&(e.style.display="inline",t.style.display="none"),this.elements.loadMoreBtn.disabled=!0}a&&document.body.classList.add("hph-archive-loading")},hideLoadingState:function(){if(this.elements.loadMoreBtn){const a=this.elements.loadMoreBtn.querySelector(".hph-load-more-loading"),e=this.elements.loadMoreBtn.querySelector(".hph-load-more-text");a&&e&&(a.style.display="none",e.style.display="inline"),this.elements.loadMoreBtn.disabled=!1}document.body.classList.remove("hph-archive-loading")},showError:function(a){var o;const e=document.querySelector(".hph-archive-error");e&&e.remove();const t=document.createElement("div");t.className="hph-archive-error hph-alert hph-alert-error",t.innerHTML='\n                    <i class="fas fa-exclamation-triangle"></i>\n                    <span>'.concat(a,'</span>\n                    <button type="button" class="hph-alert-close" aria-label="Close">\n                        <i class="fas fa-times"></i>\n                    </button>\n                ');const s=((o=this.elements.gridContainer)==null?void 0:o.parentNode)||document.querySelector(".hph-listings-container");if(s){s.insertBefore(t,s.firstChild),setTimeout(()=>{t.parentNode&&t.remove()},5e3);const r=t.querySelector(".hph-alert-close");HPH.events.on(r,"click",()=>{t.remove()})}},redirectToMapView:function(){if(document.body.classList.contains("hph-map-view")||window.location.search.includes("view=map")){console.log("Already on map view, skipping redirect");return}const a=new URL(window.location);a.searchParams.set("view","map"),window.location.href=a.toString()},hideElementsForMapView:function(){document.querySelectorAll('[data-hide-in-views*="map"]').forEach(e=>{e.style.display="none"})},showElementsForStandardViews:function(){document.querySelectorAll('[data-hide-in-views*="map"]').forEach(e=>{e.style.display=""})},initializeView:function(){const e=new URLSearchParams(window.location.search).get("view");if(e&&["grid","list","map"].includes(e))this.switchView(e);else{const t=localStorage.getItem("hph_archive_view")||"grid";this.switchView(t)}},loadSavedPreferences:function(){try{const a=localStorage.getItem("hph_archive_view");a&&["grid","list","map"].includes(a)&&(this.currentView=a)}catch(a){}},saveViewPreference:function(a){try{localStorage.setItem("hph_archive_view",a)}catch(e){}},initMapView:function(){n.debug&&console.log("Initializing map view functionality..."),window.HPHArchiveMap={initializeMapView:()=>{this.initializeMapView()}},this.elements.mapContainer=document.getElementById("mapbox-listings-map"),this.elements.mapCards=document.querySelectorAll(".hph-map-card"),n.debug&&console.log("Map view elements cached:",{mapContainer:!!this.elements.mapContainer,cardsFound:this.elements.mapCards.length})},initializeMapView:function(){n.debug&&console.log("Starting map view initialization...");const a=this.elements.mapContainer||document.getElementById("mapbox-listings-map");if(!a){console.error("Map container not found");return}if(typeof mapboxgl=="undefined"){console.error("Mapbox GL JS not loaded");return}if(!window.hph_mapbox_config||!window.hph_mapbox_config.access_token){console.error("Mapbox configuration not available");return}if(!window.hphArchiveMap){console.error("Archive map data not available");return}typeof HPHMap!="undefined"?this.initializeClusteredMap(a):(console.warn("HPHMap class not available, using fallback"),this.initializeFallbackMap(a))},initializeClusteredMap:function(a){const e=window.hphArchiveMap,t=e.listings||[],s=e.center||[-75.1398,38.7816];try{const o=new HPHMap(a,{center:s,zoom:11,styleTheme:"professional",markerTheme:"happyPlace"});o.map.on("load",()=>{n.debug&&console.log("Map loaded, adding clustered markers for",t.length,"listings"),o.addListingMarkers(t,{enableClustering:e.enable_clustering!==!1,clusterRadius:e.cluster_radius||50,clusterMaxZoom:e.cluster_max_zoom||14,showPopup:!0,fitBounds:t.length>1});const r=a.querySelector(".hph-map-loading");r&&(r.style.display="none"),this.setupMapSidebarSync(o),n.debug&&console.log("Clustered map initialization complete")}),this.mapInstance=o}catch(o){console.error("Error initializing clustered map:",o),this.initializeFallbackMap(a)}},initializeFallbackMap:function(a){const e=window.hphArchiveMap,t=e.listings||[],s=e.center||[-75.1398,38.7816];try{mapboxgl.accessToken=window.hph_mapbox_config.access_token;const o=new mapboxgl.Map({container:a,style:"mapbox://styles/mapbox/light-v11",center:s,zoom:11});o.on("load",()=>{t.forEach(i=>{if(i.latitude&&i.longitude){const l=new mapboxgl.Marker({color:"#2563eb"}).setLngLat([i.longitude,i.latitude]).addTo(o),p=new mapboxgl.Popup({offset:25}).setHTML(this.createPopupHTML(i));l.setPopup(p)}});const r=a.querySelector(".hph-map-loading");r&&(r.style.display="none"),console.log("Fallback map initialized with",t.length,"listings")})}catch(o){console.error("Fallback map initialization failed:",o)}},setupMapSidebarSync:function(a){const e=this.elements.mapCards||document.querySelectorAll(".hph-map-card");e.forEach(t=>{t.addEventListener("click",s=>{const o=t.dataset.listingId;e.forEach(r=>r.classList.remove("active")),t.classList.add("active"),a&&a.highlightListingMarker&&a.highlightListingMarker(o)})}),document.addEventListener("hph-map-listing-click",t=>{const s=t.detail.listingId,o=document.querySelector('[data-listing-id="'.concat(s,'"]'));o&&(e.forEach(r=>r.classList.remove("active")),o.classList.add("active"),o.scrollIntoView({behavior:"smooth",block:"nearest"}))})},createPopupHTML:function(a){const e=a.price?"$".concat(Number(a.price).toLocaleString()):"",t=a.bedrooms?"".concat(a.bedrooms," bed"):"",s=a.bathrooms?"".concat(a.bathrooms," bath"):"",o=a.square_feet?"".concat(Number(a.square_feet).toLocaleString()," sq ft"):"",r=[t,s,o].filter(Boolean).join(" • ");return'\n                    <div style="padding: 12px; max-width: 280px;">\n                        <h4 style="margin: 0 0 8px 0; font-size: 16px; font-weight: 600;">\n                            <a href="'.concat(a.permalink,'" style="color: #1f2937; text-decoration: none;">').concat(a.title,"</a>\n                        </h4>\n                        ").concat(e?'<div style="color: #2563eb; font-weight: 700; font-size: 18px; margin-bottom: 8px;">'.concat(e,"</div>"):"","\n                        ").concat(r?'<div style="color: #6b7280; font-size: 14px; margin-bottom: 12px;">'.concat(r,"</div>"):"",'\n                        <a href="').concat(a.permalink,'" style="color: #2563eb; text-decoration: none; font-size: 14px; font-weight: 600;">\n                            View Details →\n                        </a>\n                    </div>\n                ')}}});if(typeof HPHMap=="undefined"){class n{getMapStyle(e){const t={professional:"mapbox://styles/mapbox/light-v11",luxury:"mapbox://styles/mapbox/dark-v11",streets:"mapbox://styles/mapbox/streets-v12",satellite:"mapbox://styles/mapbox/satellite-streets-v12",minimal:"mapbox://styles/mapbox/light-v11",navigation:"mapbox://styles/mapbox/navigation-day-v1"};return t[e]||t.professional}constructor(e,t={}){this.container=typeof e=="string"?document.getElementById(e):e,this.map=null,this.markers=[],this.popups=[],this.options=h({style:this.getMapStyle(t.styleTheme||"professional"),zoom:15,center:[-75.1398,38.7816],pitch:0,bearing:0,attributionControl:!0,navigationControl:!0,fullscreenControl:!1,geolocateControl:!1,scaleControl:!1,styleTheme:"professional",markerTheme:"happyPlace"},t),this.init()}init(){if(this.container){if(!window.hph_mapbox_config){this.showError("Map configuration not available");return}if(!window.hph_mapbox_config.access_token&&window.hph_mapbox_config.has_token!==!1){this.showError("Map configuration not available");return}if(window.hph_mapbox_config.has_token===!1){this.showConfigurationMessage();return}if(typeof mapboxgl=="undefined"){this.showError("Mapbox GL JS library not available");return}try{mapboxgl.accessToken=window.hph_mapbox_config.access_token,this.container&&(this.container.innerHTML=""),this.map=new mapboxgl.Map({container:this.container,style:this.options.style,center:this.options.center,zoom:this.options.zoom,pitch:this.options.pitch,bearing:this.options.bearing,attributionControl:this.options.attributionControl}),this.addControls(),this.map.on("load",()=>{this.onMapLoad()}),this.map.on("resize",()=>{this.map.resize()}),this.container.dispatchEvent(new CustomEvent("hph-map-initialized",{detail:{map:this.map,instance:this}}))}catch(e){this.showError("Failed to load map")}}}addControls(){this.options.navigationControl&&this.map.addControl(new mapboxgl.NavigationControl({showCompass:!1,visualizePitch:!1}),"top-right"),this.options.fullscreenControl&&this.map.addControl(new mapboxgl.FullscreenControl,"top-right"),this.options.geolocateControl&&this.map.addControl(new mapboxgl.GeolocateControl({positionOptions:{enableHighAccuracy:!0},trackUserLocation:!1}),"top-right"),this.options.scaleControl&&this.map.addControl(new mapboxgl.ScaleControl({maxWidth:100,unit:"imperial"}),"bottom-left")}onMapLoad(){}addListingMarker(e,t={}){if(!e.latitude||!e.longitude)return null;const s=h({showPopup:!0,popupOffset:25,className:"hph-listing-marker"},t),o=new mapboxgl.Marker({color:"#0ea5e9"}).setLngLat([parseFloat(e.longitude),parseFloat(e.latitude)]).addTo(this.map);if(s.showPopup){const r=this.createListingPopup(e,s);o.setPopup(r)}return this.markers.push({type:"listing",id:e.id,marker:o,data:e}),o}addListingMarkers(e,t={}){const s=h({enableClustering:!0,clusterRadius:50,clusterMaxZoom:14,showPopup:!0,fitBounds:!0},t);if(s.enableClustering&&e.length>1)this.addClusteredMarkers(e,s);else{const o=[];e.forEach(r=>{const i=this.addListingMarker(r,s);i&&o.push(i)}),s.fitBounds&&o.length>1&&this.fitToMarkers(o)}return s.showZipBoundary&&s.zipCode&&this.addZipCodeBoundary(e,s.zipCode),this.markers}getHPHColors(){const e=getComputedStyle(document.documentElement);return{primary:e.getPropertyValue("--hph-primary").trim()||"#1e40af",secondary:e.getPropertyValue("--hph-secondary").trim()||"#059669",accent:e.getPropertyValue("--hph-accent").trim()||"#dc2626",warning:e.getPropertyValue("--hph-warning").trim()||"#f59e0b",muted:e.getPropertyValue("--hph-muted").trim()||"#6b7280"}}addClusteredMarkers(e,t={}){console.log("HPHMap: Starting addClusteredMarkers with",e.length,"listings"),console.log("HPHMap: Options:",t),this.clearMapMarkers();const s=this.getHPHColors();console.log("HPHMap: Colors:",s);const o=e.filter(i=>{const l=i.latitude&&i.longitude&&!isNaN(parseFloat(i.latitude))&&!isNaN(parseFloat(i.longitude));return!l&&i.id&&console.warn("HPHMap: Listing",i.id,"missing valid coordinates:",{lat:i.latitude,lng:i.longitude}),l});if(console.log("HPHMap: Valid listings with coordinates:",o.length),o.length===0){console.warn("HPHMap: No listings with valid coordinates found");return}const r={type:"FeatureCollection",features:o.map(i=>({type:"Feature",geometry:{type:"Point",coordinates:[parseFloat(i.longitude),parseFloat(i.latitude)]},properties:{id:i.id,title:i.title||"",price:i.price||0,address:i.street_address||"",status:i.status||"active",featured_image:i.featured_image||"",bedrooms:i.bedrooms||0,bathrooms:i.bathrooms||0,square_feet:i.square_feet||0,permalink:i.permalink||"#"}}))};console.log("HPHMap: GeoJSON prepared with",r.features.length,"features"),console.log("HPHMap: Sample feature:",r.features[0]);try{const i={type:"geojson",data:r,cluster:!0,clusterMaxZoom:t.clusterMaxZoom||14,clusterRadius:t.clusterRadius||50};console.log("HPHMap: Adding source with config:",i),this.map.addSource("listings",i),console.log("HPHMap: Source added successfully")}catch(i){console.error("HPHMap: Error adding source:",i);return}try{const i={id:"clusters",type:"circle",source:"listings",filter:["has","point_count"],paint:{"circle-color":["step",["get","point_count"],s.primary||"#2563eb",5,s.secondary||"#06b6d4",10,s.accent||"#dc2626"],"circle-radius":["step",["get","point_count"],25,5,35,10,45],"circle-stroke-width":3,"circle-stroke-color":"#ffffff","circle-opacity":.9}};console.log("HPHMap: Adding cluster layer with config:",i),this.map.addLayer(i),console.log("HPHMap: Cluster layer added successfully")}catch(i){console.error("HPHMap: Error adding cluster layer:",i);return}this.map.addLayer({id:"cluster-count",type:"symbol",source:"listings",filter:["has","point_count"],layout:{"text-field":"{point_count}","text-font":["Open Sans Bold","Arial Unicode MS Bold"],"text-size":16,"text-anchor":"center"},paint:{"text-color":"#ffffff","text-halo-color":"rgba(0, 0, 0, 0.3)","text-halo-width":1}});try{const i={id:"unclustered-point",type:"circle",source:"listings",filter:["!",["has","point_count"]],paint:{"circle-color":["match",["get","status"],"active",s.secondary||"#10b981","pending",s.warning||"#f59e0b","sold",s.muted||"#6b7280",s.primary||"#2563eb"],"circle-radius":12,"circle-stroke-width":3,"circle-stroke-color":"#ffffff","circle-opacity":.9}};console.log("HPHMap: Adding unclustered point layer with config:",i),this.map.addLayer(i),console.log("HPHMap: Unclustered point layer added successfully")}catch(i){console.error("HPHMap: Error adding unclustered point layer:",i);return}console.log("HPHMap: Adding cluster event handlers..."),this.addClusterEventHandlers(t),t.fitBounds&&r.features.length>0&&(console.log("HPHMap: Fitting bounds to show all markers..."),this.fitToGeoJSON(r)),console.log("HPHMap: Clustered markers setup complete")}highlightListingMarker(e){if(!this.map||!e)return;this.unhighlightAllMarkers(),this.map.getSource("highlight-marker")||(this.map.addSource("highlight-marker",{type:"geojson",data:{type:"FeatureCollection",features:[]}}),this.map.addLayer({id:"highlight-marker-circle",type:"circle",source:"highlight-marker",paint:{"circle-radius":20,"circle-color":"rgba(255, 255, 255, 0.8)","circle-stroke-width":4,"circle-stroke-color":"#ff6b35"}}));const t=this.map.getSource("listings");if(t&&t._data){const s=t._data.features.find(o=>o.properties.id==e);s&&(this.map.getSource("highlight-marker").setData({type:"FeatureCollection",features:[s]}),this.map.easeTo({center:s.geometry.coordinates,zoom:Math.max(this.map.getZoom(),16),duration:1e3}))}}unhighlightAllMarkers(){if(this.map)try{this.map.getSource("highlight-marker")&&this.map.getSource("highlight-marker").setData({type:"FeatureCollection",features:[]})}catch(e){}}showListingPopup(e){if(!this.map||!e)return;const t=this.map.getSource("listings");if(t&&t._data){const s=t._data.features.find(o=>o.properties.id==e);s&&this.createListingPopupFromFeature(s.properties,s.geometry.coordinates).addTo(this.map)}}addClusterEventHandlers(e={}){this.map.on("click","clusters",t=>{const s=this.map.queryRenderedFeatures(t.point,{layers:["clusters"]}),o=s[0].properties.cluster_id;this.map.getSource("listings").getClusterExpansionZoom(o,(r,i)=>{r||this.map.easeTo({center:s[0].geometry.coordinates,zoom:i})})}),this.map.on("click","unclustered-point",t=>{const o=t.features[0].properties;e.showPopup&&this.createListingPopupFromFeature(o,t.lngLat).addTo(this.map),this.map.fire("listing-click",{listing:o,coordinates:t.lngLat}),document.dispatchEvent(new CustomEvent("hph-map-listing-click",{detail:{listingId:o.id,listing:o,coordinates:t.lngLat}}))}),this.map.on("mouseenter","clusters",()=>{this.map.getCanvas().style.cursor="pointer"}),this.map.on("mouseleave","clusters",()=>{this.map.getCanvas().style.cursor=""}),this.map.on("mouseenter","unclustered-point",()=>{this.map.getCanvas().style.cursor="pointer"}),this.map.on("mouseleave","unclustered-point",()=>{this.map.getCanvas().style.cursor=""})}createListingPopupFromFeature(e,t){const s=new mapboxgl.Popup({offset:25,closeButton:!0,closeOnClick:!1,className:"hph-listing-popup hph-map-card-popup"}),o=this.getHPHColors(),r=e.price?this.formatPrice(e.price):"",i=e.featured_image||"",l=e.title||e.address||"Property",p=e.address||e.street_address||"",u={active:{text:"Active",color:o.secondary},pending:{text:"Pending",color:o.warning},sold:{text:"Sold",color:o.muted},new:{text:"New",color:o.primary}},c=e.status?u[e.status.toLowerCase()]:null,m='\n            <div style="width: 320px; background: white; border-radius: 12px; overflow: hidden; box-shadow: 0 10px 25px rgba(0,0,0,0.15);">\n                '.concat(i&&!i.includes("placeholder")?'\n                    <div style="position: relative; height: 200px; overflow: hidden;">\n                        <img src="'.concat(i,'" alt="').concat(l,'" style="width: 100%; height: 100%; object-fit: cover;" loading="lazy">\n                        ').concat(c?'\n                            <div style="position: absolute; top: 12px; left: 12px;">\n                                <span style="background: '.concat(c.color,'; color: white; padding: 4px 8px; border-radius: 6px; font-size: 12px; font-weight: 600;">').concat(c.text,"</span>\n                            </div>\n                        "):"","\n                    </div>\n                "):"",'\n                \n                <div style="padding: 16px;">\n                    <h3 style="margin: 0 0 8px 0; font-size: 18px; font-weight: 600; color: #1f2937;">').concat(l,"</h3>\n                    \n                    ").concat(p?'\n                        <p style="margin: 0 0 12px 0; font-size: 14px; color: #6b7280;">'.concat(p,"</p>\n                    "):"",'\n                    \n                    <div style="font-size: 24px; font-weight: 700; color: ').concat(o.primary,'; margin-bottom: 12px;">').concat(r,"</div>\n                    \n                    ").concat(e.bedrooms||e.bathrooms||e.square_feet?'\n                        <div style="display: flex; gap: 16px; font-size: 14px; color: #6b7280; margin-bottom: 16px;">\n                            '.concat(e.bedrooms?'<div style="display: flex; align-items: center; gap: 4px;"><i class="fas fa-bed"></i><span>'.concat(e.bedrooms," bed</span></div>"):"","\n                            ").concat(e.bathrooms?'<div style="display: flex; align-items: center; gap: 4px;"><i class="fas fa-bath"></i><span>'.concat(e.bathrooms," bath</span></div>"):"","\n                            ").concat(e.square_feet?'<div style="display: flex; align-items: center; gap: 4px;"><i class="fas fa-ruler-combined"></i><span>'.concat(Number(e.square_feet).toLocaleString()," sqft</span></div>"):"","\n                        </div>\n                    "):"","\n                    \n                    ").concat(e.permalink?'\n                        <a href="'.concat(e.permalink,'" style="display: inline-block; background: ').concat(o.primary,'; color: white; padding: 8px 16px; border-radius: 6px; text-decoration: none; font-size: 14px; font-weight: 600;">\n                            View Details →\n                        </a>\n                    '):"","\n                </div>\n            </div>\n        ");return s.setLngLat(t).setHTML(m),s}fitToGeoJSON(e){if(!e.features||e.features.length===0)return;const t=new mapboxgl.LngLatBounds;e.features.forEach(s=>{t.extend(s.geometry.coordinates)}),this.map.fitBounds(t,{padding:50,maxZoom:15})}clearMapMarkers(){if(this.map){this.markers&&this.markers.length>0&&(this.markers.forEach(e=>{e.marker&&e.marker.remove&&e.marker.remove()}),this.markers=[]);try{this.map.getLayer("clusters")&&this.map.removeLayer("clusters"),this.map.getLayer("cluster-count")&&this.map.removeLayer("cluster-count"),this.map.getLayer("unclustered-point")&&this.map.removeLayer("unclustered-point"),this.map.getLayer("unclustered-point-label")&&this.map.removeLayer("unclustered-point-label"),this.map.getSource("listings")&&this.map.removeSource("listings")}catch(e){}}}getMarkerTheme(e=null){const t=e||this.options.markerTheme||"happyPlace",s={happyPlace:{active:"#10b981",pending:"#f59e0b",sold:"#ef4444",default:"var(--hph-primary)"},luxury:{active:"#8fbc8f",pending:"#cd853f",sold:"#8b0000",default:"#d4af37"},minimal:{active:"#059669",pending:"#d97706",sold:"#dc2626",default:"#000000"}};return s[t]||s.happyPlace}createListingMarkerElement(e,t){return null}createListingPopup(e,t){const s=new mapboxgl.Popup({offset:t.popupOffset||25,closeButton:!0,closeOnClick:!1,className:"hph-listing-popup hph-map-card-popup"}),o=this.getHPHColors(),r=e.price?this.formatPrice(e.price):"",i=e.featured_image||"",l=e.street_address||"",p=this.formatLocation(e),u={active:{text:"Active",color:o.secondary},pending:{text:"Pending",color:o.warning},sold:{text:"Sold",color:o.muted},new:{text:"New",color:o.primary}},c=e.status?u[e.status.toLowerCase()]:null,m='\n            <div class="hph-card hph-card--elevated hph-bg-white hph-overflow-hidden hph-max-w-80">\n                '.concat(i&&!i.includes("placeholder")?'\n                    <div class="hph-relative hph-h-48 hph-overflow-hidden">\n                        <img src="'.concat(i,'" \n                             alt="').concat(e.title||l||"Property",'" \n                             class="hph-w-full hph-h-full hph-object-cover hph-transition-transform hph-duration-300 hover:hph-scale-105"\n                             loading="lazy"\n                             onerror="this.parentElement.style.display=\'none\'">\n                        \n                        ').concat(c?'\n                            <div class="hph-absolute hph-top-3 hph-left-3">\n                                <span class="hph-inline-flex hph-items-center hph-px-2 hph-py-1 hph-rounded-md hph-text-xs hph-font-semibold hph-shadow-sm"\n                                      style="background-color: '.concat(c.color,'; color: white;">\n                                    ').concat(c.text,"\n                                </span>\n                            </div>\n                        "):"",'\n                        \n                        <button class="hph-absolute hph-top-3 hph-right-3 hph-w-9 hph-h-9 hph-bg-white hph-rounded-full hph-flex hph-items-center hph-justify-center hph-text-gray-500 hover:hph-text-red-500 hph-transition-colors hph-shadow-sm" \n                                data-listing-id="').concat(e.id||"",'" \n                                onclick="event.stopPropagation();">\n                            <i class="fas fa-heart hph-text-sm"></i>\n                        </button>\n                    </div>\n                '):"",'\n                \n                <div class="hph-p-4">\n                    <!-- Price -->\n                    ').concat(r?'\n                        <div class="hph-font-bold hph-text-xl hph-mb-2" style="color: '.concat(o.primary,';">\n                            ').concat(r,"\n                        </div>\n                    "):"",'\n                    \n                    <!-- Street Address -->\n                    <h3 class="hph-text-gray-900 hph-font-semibold hph-text-base hph-mb-1 hph-line-clamp-1">\n                        ').concat(l||e.title||"Property Address","\n                    </h3>\n                    \n                    <!-- Location (if different from street address) -->\n                    ").concat(p&&p!==l?'\n                        <p class="hph-text-sm hph-text-gray-500 hph-mb-3">'.concat(p,"</p>\n                    "):"","\n                    \n                    <!-- Property Details -->\n                    ").concat(e.bedrooms||e.bathrooms||e.square_feet?'\n                        <div class="hph-flex hph-items-center hph-gap-4 hph-text-sm hph-text-gray-600 hph-mb-4">\n                            '.concat(e.bedrooms?'\n                                <div class="hph-flex hph-items-center hph-gap-1">\n                                    <i class="fas fa-bed hph-text-gray-500"></i>\n                                    <span>'.concat(e.bedrooms," bed").concat(e.bedrooms!=1?"s":"","</span>\n                                </div>\n                            "):"","\n                            ").concat(e.bathrooms?'\n                                <div class="hph-flex hph-items-center hph-gap-1">\n                                    <i class="fas fa-bath hph-text-gray-500"></i>\n                                    <span>'.concat(e.bathrooms," bath").concat(e.bathrooms!=1?"s":"","</span>\n                                </div>\n                            "):"","\n                            ").concat(e.square_feet?'\n                                <div class="hph-flex hph-items-center hph-gap-1">\n                                    <i class="fas fa-ruler-combined hph-text-gray-500"></i>\n                                    <span>'.concat(this.formatNumber(e.square_feet)," sq ft</span>\n                                </div>\n                            "):"","\n                        </div>\n                    "):'<div class="hph-mb-4"></div>','\n                    \n                    <!-- Action Button -->\n                    <a href="').concat(e.permalink||"#",'" \n                       class="hph-btn hph-w-full hph-text-center hph-py-3 hph-font-semibold hph-transition-all hph-duration-200 hover:hph-shadow-lg"\n                       style="background-color: ').concat(o.primary,'; color: white; display: inline-block; padding: 8px 16px; border-radius: 6px; text-decoration: none;"\n                       onclick="event.stopPropagation();">\n                        View Details\n                        <i class="fas fa-arrow-right hph-ml-2"></i>\n                    </a>\n                </div>\n            </div>\n        ');return s.setHTML(m),s}addPOIMarker(e,t={}){if(!e.latitude||!e.longitude)return null;const s=new mapboxgl.Marker({color:"#f59e0b"}).setLngLat([parseFloat(e.longitude),parseFloat(e.latitude)]).addTo(this.map);if(t.showPopup!==!1){const o=this.createPOIPopup(e,t);s.setPopup(o)}return this.markers.push({type:"poi",id:e.id||e.name,marker:s,data:e}),s}createPOIMarkerElement(e,t){return null}createPOIPopup(e,t){const s=new mapboxgl.Popup({offset:15,closeButton:!0,className:"hph-poi-popup"}),o='\n            <div class="hph-popup-content">\n                <div class="hph-popup-details">\n                    <h4 class="hph-popup-title">'.concat(e.name||e.title,"</h4>\n                    ").concat(e.type?'<div class="hph-popup-type">'.concat(e.type,"</div>"):"","\n                    ").concat(e.address?'<div class="hph-popup-address">\n                        <i class="fas fa-map-marker-alt"></i>\n                        '.concat(e.address,"\n                    </div>"):"","\n                    ").concat(e.description?'<div class="hph-popup-description">\n                        '.concat(e.description,"\n                    </div>"):"","\n                </div>\n            </div>\n        ");return s.setHTML(o),s}getPOIIcon(e){const t={school:"fas fa-graduation-cap",hospital:"fas fa-hospital",restaurant:"fas fa-utensils",shopping:"fas fa-shopping-bag",park:"fas fa-tree",gas_station:"fas fa-gas-pump",bank:"fas fa-university",gym:"fas fa-dumbbell",pharmacy:"fas fa-pills",default:"fas fa-map-pin"};return t[e]||t.default}fitToMarkers(e=null){const t=e||this.markers.map(o=>o.marker);if(t.length===0)return;if(t.length===1){const o=t[0].getLngLat();this.map.flyTo({center:o,zoom:this.options.zoom});return}const s=new mapboxgl.LngLatBounds;t.forEach(o=>{s.extend(o.getLngLat())}),this.map.fitBounds(s,{padding:50,maxZoom:16})}clearMarkers(e=null){this.markers.forEach((t,s)=>{(!e||t.type===e)&&(t.marker.remove(),this.markers.splice(s,1))})}getMarker(e,t=null){return this.markers.find(s=>s.id===e&&(!t||s.type===t))}showConfigurationMessage(){this.container&&(this.container.innerHTML='\n            <div class="hph-map-error">\n                <div class="hph-map-error-icon">\n                    <i class="fas fa-map-marked-alt"></i>\n                </div>\n                <div class="hph-map-error-message">\n                    <h4>Map Configuration Required</h4>\n                    <p>To enable map view, please configure your Mapbox access token in the Happy Place plugin settings.</p>\n                    <div style="margin-top: 1rem;">\n                        <small style="color: #666; font-style: italic;">\n                            Visit the Happy Place admin panel to add your Mapbox API key.\n                        </small>\n                    </div>\n                </div>\n            </div>\n        ')}showError(e){this.container&&(this.container.innerHTML='\n            <div class="hph-map-error">\n                <div class="hph-map-error-icon">\n                    <i class="fas fa-exclamation-triangle"></i>\n                </div>\n                <div class="hph-map-error-message">\n                    <h4>Map Unavailable</h4>\n                    <p>'.concat(e,"</p>\n                </div>\n            </div>\n        "))}formatPrice(e){const t=parseFloat(e);return isNaN(t)?e:new Intl.NumberFormat("en-US",{style:"currency",currency:"USD",minimumFractionDigits:0,maximumFractionDigits:0}).format(t)}formatNumber(e){return new Intl.NumberFormat("en-US").format(e)}formatAddress(e){const t=[];return(e.street_address||e.street_number&&e.street_name)&&t.push(e.street_address||"".concat(e.street_number," ").concat(e.street_name," ").concat(e.street_type||"").trim()),e.city&&t.push(e.city),e.state&&t.push(e.state),e.zip_code&&t.push(e.zip_code),t.join(", ")}formatLocation(e){const t=[];return e.city&&t.push(e.city),e.state&&t.push(e.state),t.join(", ")}setStyle(e,t=null){if(!this.map)return;const s=this.getMapStyle(e);this.map.setStyle(s),this.options.styleTheme=e,t&&(this.options.markerTheme=t,this.updateMarkerThemes())}updateMarkerThemes(){const e=this.getMarkerTheme();this.markers.forEach(t=>{var s;if(t.type==="listing"){const o=t.marker.getElement(),r=t.data,i=e[(s=r.status)==null?void 0:s.toLowerCase()]||e.default;o.style.setProperty("--marker-color",i),o.style.setProperty("--marker-border-color",i),o.className=o.className.replace(/hph-marker-theme--\w+/,""),o.classList.add("hph-marker-theme--".concat(this.options.markerTheme));const l=o.querySelector(".hph-marker-icon");l&&(l.style.backgroundColor=i)}})}addStyleControl(){const e={onAdd:()=>{const t=document.createElement("div");return t.className="mapboxgl-ctrl mapboxgl-ctrl-group hph-style-control",[{name:"Professional",value:"professional",icon:"fas fa-building"},{name:"Luxury",value:"luxury",icon:"fas fa-gem"},{name:"Satellite",value:"satellite",icon:"fas fa-satellite"},{name:"Streets",value:"streets",icon:"fas fa-road"}].forEach(o=>{const r=document.createElement("button");r.type="button",r.innerHTML='<i class="'.concat(o.icon,'"></i>'),r.title=o.name,r.addEventListener("click",()=>{this.setStyle(o.value)}),t.appendChild(r)}),t},onRemove:()=>{}};this.map.addControl(e,"top-left")}toggle3DBuildings(e=!0){this.map&&this.map.on("style.load",()=>{e?this.map.addLayer({id:"add-3d-buildings",source:"composite","source-layer":"building",filter:["==","extrude","true"],type:"fill-extrusion",minzoom:15,paint:{"fill-extrusion-color":"#aaa","fill-extrusion-height":["interpolate",["linear"],["zoom"],15,0,15.05,["get","height"]],"fill-extrusion-base":["interpolate",["linear"],["zoom"],15,0,15.05,["get","min_height"]],"fill-extrusion-opacity":.6}}):this.map.getLayer("add-3d-buildings")&&this.map.removeLayer("add-3d-buildings")})}addZipCodeBoundary(e,t){if(!this.map)return;const s=e.filter(o=>o.zip_code&&o.zip_code===t);if(!(s.length<2))try{const o=s.map(l=>[parseFloat(l.longitude),parseFloat(l.latitude)]),r=this.calculateBounds(o),i=this.createBoundingPolygon(r);this.map.getSource("zip-boundary")&&(this.map.removeLayer("zip-boundary-fill"),this.map.removeLayer("zip-boundary-line"),this.map.removeSource("zip-boundary")),this.map.addSource("zip-boundary",{type:"geojson",data:{type:"Feature",geometry:{type:"Polygon",coordinates:[i]},properties:{zipCode:t}}}),this.map.addLayer({id:"zip-boundary-fill",type:"fill",source:"zip-boundary",paint:{"fill-color":"#0ea5e9","fill-opacity":.1}}),this.map.addLayer({id:"zip-boundary-line",type:"line",source:"zip-boundary",paint:{"line-color":"#0ea5e9","line-width":2,"line-dasharray":[2,2]}})}catch(o){}}calculateBounds(e){let t=1/0,s=-1/0,o=1/0,r=-1/0;return e.forEach(([i,l])=>{t=Math.min(t,i),s=Math.max(s,i),o=Math.min(o,l),r=Math.max(r,l)}),{minLng:t,maxLng:s,minLat:o,maxLat:r}}createBoundingPolygon(e){const s=e.minLng-.005,o=e.maxLng+.005,r=e.minLat-.005,i=e.maxLat+.005;return[[s,r],[o,r],[o,i],[s,i],[s,r]]}removeZipCodeBoundary(){if(this.map)try{this.map.getSource("zip-boundary")&&(this.map.removeLayer("zip-boundary-fill"),this.map.removeLayer("zip-boundary-line"),this.map.removeSource("zip-boundary"))}catch(e){}}clearMarkers(){if(this.map){this.markers&&this.markers.length>0&&(this.markers.forEach(e=>{e.marker&&e.marker.remove&&e.marker.remove()}),this.markers=[]);try{this.map.getLayer("clusters")&&this.map.removeLayer("clusters"),this.map.getLayer("cluster-count")&&this.map.removeLayer("cluster-count"),this.map.getLayer("unclustered-point")&&this.map.removeLayer("unclustered-point"),this.map.getLayer("unclustered-point-label")&&this.map.removeLayer("unclustered-point-label"),this.map.getSource("listings")&&this.map.removeSource("listings")}catch(e){}}}destroy(){this.map&&(this.clearMapMarkers(),this.removeZipCodeBoundary(),this.map.remove(),this.map=null)}}document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll("[data-hph-map]").forEach(e=>{if(!e.hasAttribute("data-archive-map"))try{const t={};e.dataset.mapCenter&&(t.center=JSON.parse(e.dataset.mapCenter)),e.dataset.mapZoom&&(t.zoom=parseInt(e.dataset.mapZoom)),e.dataset.mapStyle&&(t.style=e.dataset.mapStyle);const s=new n(e,t);if(e.dataset.mapListings){const o=JSON.parse(e.dataset.mapListings),r={fitBounds:o.length>1};e.dataset.showZipBoundary&&e.dataset.zipCode&&(r.showZipBoundary=!0,r.zipCode=e.dataset.zipCode),s.addListingMarkers(o,r)}e.dataset.mapPois&&JSON.parse(e.dataset.mapPois).forEach(r=>s.addPOIMarker(r)),e.hphMap=s}catch(t){}})}),typeof d!="undefined"&&d.exports?d.exports=n:window.HPHMap=n}window.hphDebug&&console.log("HPH Unified Archive Bundle Loaded - Filter/Pagination/Search Redundancies Eliminated")});export default x();
